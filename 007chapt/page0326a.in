MacBook-Air:~ billw$ /Users/billw/Downloads/LADR-2009-11A/bin/prover9 -f /Users/billw/Documents/sage/logic_book/07chapt/page0326a.in
============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 47534 was started by billw on MacBook-Air.local,
Mon Nov  2 20:35:07 2015
The command was "/Users/billw/Downloads/LADR-2009-11A/bin/prover9 -f /Users/billw/Documents/sage/logic_book/07chapt/page0326a.in".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /Users/billw/Documents/sage/logic_book/07chapt/page0326a.in


formulas(assumptions).
(exists y (R & B)).
(all z (R -> D)).
end_of_list.

formulas(goals).
(exists y (B & D)).
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (exists y (R & B)) # label(non_clause).  [assumption].
2 (all z (R -> D)) # label(non_clause).  [assumption].
3 (exists y (B & D)) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
R.  [clausify(1)].
B.  [clausify(1)].
-R | D.  [clausify(2)].
-B | -D.  [deny(3)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

No predicates eliminated.

============================== end predicate elimination =============

Auto_denials:  (no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ R, B, D ]).
Function symbol precedence:  function_order([ ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(neg_binary_resolution).  % (HNE depth_diff=0)
  % clear(ordered_res).  % (HNE depth_diff=0)
  % set(ur_resolution).  % (HNE depth_diff=0)
    % set(ur_resolution) -> set(pos_ur_resolution).
    % set(ur_resolution) -> set(neg_ur_resolution).

Auto_process settings:
  % set(unit_deletion).  % (Horn set with negative nonunits)

kept:      4 R.  [clausify(1)].
kept:      5 B.  [clausify(1)].
           6 -R | D.  [clausify(2)].
kept:      7 D.  [copy(6),unit_del(a,4)].
           8 -B | -D.  [deny(3)].
-------- Proof 1 --------

============================== PROOF =================================

% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 9.
% Level of proof is 3.
% Maximum clause weight is 1.000.
% Given clauses 0.

1 (exists y (R & B)) # label(non_clause).  [assumption].
2 (all z (R -> D)) # label(non_clause).  [assumption].
3 (exists y (B & D)) # label(non_clause) # label(goal).  [goal].
4 R.  [clausify(1)].
5 B.  [clausify(1)].
6 -R | D.  [clausify(2)].
7 D.  [copy(6),unit_del(a,4)].
8 -B | -D.  [deny(3)].
9 $F.  [copy(8),unit_del(a,5),unit_del(b,7)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=0. Generated=4. Kept=3. proofs=1.
Usable=0. Sos=0. Demods=0. Limbo=3, Disabled=4. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=0. Back_subsumed=0.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=0. Nonunit_bsub_feature_tests=0.
Megabytes=0.02.
User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

THEOREM PROVED

Exiting with 1 proof.

------ process 47534 exit (max_proofs) ------

Process 47534 exit (max_proofs) Mon Nov  2 20:35:07 2015
MacBook-Air:~ billw$

formulas(assumptions).

 % assumption
(exists y (R & B)).

% assumption
(all z (R -> D)).

end_of_list.

formulas(goals).
 % goal
  (exists y (B & D)).
end_of_list.

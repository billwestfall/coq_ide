MacBook-Air:~ billw$ /Users/billw/Downloads/LADR-2009-11A/bin/prover9 -f /Users/billw/Documents/sage/logic_book/08chapt/page0397a.in
============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 2521 was started by billw on MacBook-Air.local,
Mon Nov  9 21:08:23 2015
The command was "/Users/billw/Downloads/LADR-2009-11A/bin/prover9 -f /Users/billw/Documents/sage/logic_book/08chapt/page0397a.in".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /Users/billw/Documents/sage/logic_book/08chapt/page0397a.in


formulas(assumptions).
(all x (Fx -> Gx)) -> (exists x Nx).
(all x (Nx -> Gx)).
end_of_list.

formulas(goals).
(all x (-Fx -> Gx)).
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x (Fx -> Gx)) -> (exists x Nx) # label(non_clause).  [assumption].
2 (all x (Nx -> Gx)) # label(non_clause).  [assumption].
3 (all x (-Fx -> Gx)) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
Fx | Nx.  [clausify(1)].
-Gx | Nx.  [clausify(1)].
-Nx | Gx.  [clausify(2)].
-Fx.  [deny(3)].
-Gx.  [deny(3)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

No predicates eliminated.

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ Nx, Gx, Fx ]).
Function symbol precedence:  function_order([ ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

kept:      4 Fx | Nx.  [clausify(1)].
kept:      5 -Gx | Nx.  [clausify(1)].
kept:      6 -Nx | Gx.  [clausify(2)].
kept:      7 -Fx.  [deny(3)].
kept:      8 -Gx.  [deny(3)].
kept:      9 Nx.  [back_unit_del(4),unit_del(a,7)].
-------- Proof 1 --------

============================== PROOF =================================

% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 9.
% Level of proof is 3.
% Maximum clause weight is 2.000.
% Given clauses 0.

1 (all x (Fx -> Gx)) -> (exists x Nx) # label(non_clause).  [assumption].
2 (all x (Nx -> Gx)) # label(non_clause).  [assumption].
3 (all x (-Fx -> Gx)) # label(non_clause) # label(goal).  [goal].
4 Fx | Nx.  [clausify(1)].
6 -Nx | Gx.  [clausify(2)].
7 -Fx.  [deny(3)].
8 -Gx.  [deny(3)].
9 Nx.  [back_unit_del(4),unit_del(a,7)].
10 $F.  [back_unit_del(6),unit_del(a,9),unit_del(b,8)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=0. Generated=7. Kept=6. proofs=1.
Usable=0. Sos=1. Demods=0. Limbo=2, Disabled=8. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=0. Back_subsumed=1.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=2.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=0. Nonunit_bsub_feature_tests=4.
Megabytes=0.03.
User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

THEOREM PROVED

Exiting with 1 proof.

------ process 2521 exit (max_proofs) ------

Process 2521 exit (max_proofs) Mon Nov  9 21:08:23 2015
MacBook-Air:~ billw$

formulas(assumptions).

 % assumption
  (all x (Fx -> Gx)) -> exists x (Nx).

% assumption
  all x (Nx -> Gx).
end_of_list.

formulas(goals).
 % goal
  all x (-Fx -> Gx).
end_of_list.
